0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/7.1.0/bin/node',
1 verbose cli   '/Users/pro/.npm-packages/bin/npm',
1 verbose cli   'publish',
1 verbose cli   './' ]
2 info using npm@4.0.5
3 info using node@v7.1.0
4 verbose publish [ './' ]
5 silly cache add args [ './', null ]
6 verbose cache add spec ./
7 silly cache add parsed spec Result {
7 silly cache add   raw: './',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: './',
7 silly cache add   spec: '/Users/pro/Documents/projects/awesome/serverless-alexa-ability',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/pro/.npm/serverless-alexa-ability/0.1.3/package.tgz not in flight; packing
9 verbose correctMkdir /Users/pro/.npm correctMkdir not in flight; initializing
10 warn prepublish-on-install As of npm@5, `prepublish` scripts will run only for `npm publish`.
11 warn prepublish-on-install (In npm@4 and previous versions, it also runs for `npm install`.)
12 warn prepublish-on-install See the deprecation note in `npm help scripts` for more information.
13 info lifecycle serverless-alexa-ability@0.1.3~prepublish: serverless-alexa-ability@0.1.3
14 verbose lifecycle serverless-alexa-ability@0.1.3~prepublish: unsafe-perm in lifecycle true
15 verbose lifecycle serverless-alexa-ability@0.1.3~prepublish: PATH: /Users/pro/.npm-packages/lib/node_modules/npm/bin/node-gyp-bin:/Users/pro/Documents/projects/awesome/serverless-alexa-ability/node_modules/.bin:/Users/pro/.npm-packages/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
16 verbose lifecycle serverless-alexa-ability@0.1.3~prepublish: CWD: /Users/pro/Documents/projects/awesome/serverless-alexa-ability
17 silly lifecycle serverless-alexa-ability@0.1.3~prepublish: Args: [ '-c', 'npm run build' ]
18 silly lifecycle serverless-alexa-ability@0.1.3~prepublish: Returned: code: 0  signal: null
19 info lifecycle serverless-alexa-ability@0.1.3~prepare: serverless-alexa-ability@0.1.3
20 silly lifecycle serverless-alexa-ability@0.1.3~prepare: no script for prepare, continuing
21 verbose tar pack [ '/Users/pro/.npm/serverless-alexa-ability/0.1.3/package.tgz',
21 verbose tar pack   '/Users/pro/Documents/projects/awesome/serverless-alexa-ability' ]
22 verbose tarball /Users/pro/.npm/serverless-alexa-ability/0.1.3/package.tgz
23 verbose folder /Users/pro/Documents/projects/awesome/serverless-alexa-ability
24 verbose addLocalTarball adding from inside cache /Users/pro/.npm/serverless-alexa-ability/0.1.3/package.tgz
25 verbose correctMkdir /Users/pro/.npm correctMkdir not in flight; initializing
26 silly cache afterAdd serverless-alexa-ability@0.1.3
27 verbose afterAdd /Users/pro/.npm/serverless-alexa-ability/0.1.3/package/package.json not in flight; writing
28 verbose correctMkdir /Users/pro/.npm correctMkdir not in flight; initializing
29 verbose afterAdd /Users/pro/.npm/serverless-alexa-ability/0.1.3/package/package.json written
30 silly publish { name: 'serverless-alexa-ability',
30 silly publish   version: '0.1.3',
30 silly publish   description: 'Alexa framework for serverless lambda',
30 silly publish   main: 'build/index.js',
30 silly publish   scripts:
30 silly publish    { 'babel-node': 'babel-node',
30 silly publish      build: 'babel src -d build',
30 silly publish      prepublish: 'npm run build',
30 silly publish      test: 'jest',
30 silly publish      coverage: 'jest --coverage' },
30 silly publish   repository:
30 silly publish    { type: 'git',
30 silly publish      url: 'git+https://github.com/jholt1/serverless-alexa-ability.git' },
30 silly publish   keywords: [ 'serverless', 'lambda', 'alexa', 'echo' ],
30 silly publish   author: { name: 'jholt1' },
30 silly publish   license: 'ISC',
30 silly publish   bugs: { url: 'https://github.com/jholt1/serverless-alexa-ability/issues' },
30 silly publish   homepage: 'https://github.com/jholt1/serverless-alexa-ability#readme',
30 silly publish   dependencies: { lodash: '^4.17.4', 'universal-analytics': '^0.4.13' },
30 silly publish   devDependencies:
30 silly publish    { 'babel-cli': '^6.18.0',
30 silly publish      'babel-jest': '^19.0.0',
30 silly publish      'babel-preset-2017': '0.0.0',
30 silly publish      'babel-preset-es2015': '^6.18.0',
30 silly publish      'babel-preset-es2016': '^6.16.0',
30 silly publish      'babel-preset-es2017': '^6.22.0',
30 silly publish      'babel-preset-latest': '^6.16.0',
30 silly publish      'babel-preset-stage-0': '^6.16.0',
30 silly publish      jest: '^19.0.2' },
30 silly publish   readme: '# serverless-alexa-ability [![Build Status](https://travis-ci.org/jholt1/serverless-alexa-ability.svg?branch=master)](https://travis-ci.org/jholt1/serverless-alexa-ability)\n\n## Installation\n\n```\nnpm install serverless-alexa-ability --save\n```\n\n## Quick Example\n#### handler.js\n\n```javascript\nimport { Ability } from \'serverless-alexa-ability\';\n\nexports.index = (event, context, callback) => {\n\n  const app = new Ability(event, callback);\n  \n  app.on(\'askWeather\', () => {\n    app.say(\'The weather is 18 degrees and sunny\').end();\n  });\n\n};\n```\n\n## Documentation\n\n### Say\n\n```javascript\napp.say(\'hello world\').end();\n```\n\n### SSML\n\n```javascript\napp.ssml(\'<speak><say-as interpret-as="spell-out">hello</say-as></speak>\').end();\n```\n\n### Link account\nIf you have some logged in functionality, but they have yet to login\n\n```javascript\napp.say(\'Please login\').linkAccount().end();\n```\n\n### Card\n\n```javascript\napp.say(\n  \'Hello!\'\n).card({\n  type: \'Simple\',\n  title: \'Hello\',\n  content: \'World\'\n}).end();\n```\n\n### Conversation\n\n```javascript\nimport { Ability } from \'serverless-alexa-ability\';\n\nexports.index = (event, context, callback) => {\n\n  const app = new Ability(event, callback);\n  \n  // User says "Do you like cats?"\n  app.on(\'likeCats\', () => {\n    app.say(\'I like cats, do you like cats?\').converse();\n  });\n  // User says "Yes"\n  app.on(\'likeCats/AMAZON.YesIntent\', () => {\n    app.say(\'Phew thats good, now we can be friends\').end();\n  });\n  // User says "No"\n  app.on(\'likeCats/AMAZON.NoIntent\', () => {\n    app.say(\'Well this is awkward\'.end();\n  });\n\n};\n```\n\n### Reprompt\n\n```javascript\napp.say(\n  \'The weather is 18 degrees and sunny, is there anything else I can help with?\'\n).repromptSay(\n  \'Is there anything else I can help with?\'\n).converse();\n\napp.say(\n  \'The weather is 18 degrees and sunny, is there anything else I can help with?\'\n).repromptSsml(\n  \'<speak>Is there anything else I can help with?</speak>\'\n).converse();\n```\n\n### Create Sessions\n\n```javascript\napp.session({\n  foo: \'bar\',\n  hello: \'world\'\n});\n```\n\n### Get Event\n\n```javascript\nconst event = app.event();\n```\n',
30 silly publish   readmeFilename: 'README.md',
30 silly publish   gitHead: 'e420ff23bdb8fa444656feedd66ece37b68c2059',
30 silly publish   _id: 'serverless-alexa-ability@0.1.3',
30 silly publish   _shasum: '3a340e5df61e7df0f5341e7a221e6cd05c3f5e77',
30 silly publish   _from: '.' }
31 info lifecycle serverless-alexa-ability@0.1.3~prepublishOnly: serverless-alexa-ability@0.1.3
32 silly lifecycle serverless-alexa-ability@0.1.3~prepublishOnly: no script for prepublishOnly, continuing
33 verbose getPublishConfig undefined
34 silly mapToRegistry name serverless-alexa-ability
35 silly mapToRegistry using default registry
36 silly mapToRegistry registry https://registry.npmjs.org/
37 silly mapToRegistry data Result {
37 silly mapToRegistry   raw: 'serverless-alexa-ability',
37 silly mapToRegistry   scope: null,
37 silly mapToRegistry   escapedName: 'serverless-alexa-ability',
37 silly mapToRegistry   name: 'serverless-alexa-ability',
37 silly mapToRegistry   rawSpec: '',
37 silly mapToRegistry   spec: 'latest',
37 silly mapToRegistry   type: 'tag' }
38 silly mapToRegistry uri https://registry.npmjs.org/serverless-alexa-ability
39 verbose publish registryBase https://registry.npmjs.org/
40 silly publish uploading /Users/pro/.npm/serverless-alexa-ability/0.1.3/package.tgz
41 verbose request uri https://registry.npmjs.org/serverless-alexa-ability
42 verbose request sending authorization for write operation
43 info attempt registry request try #1 at 11:44:22 PM
44 verbose request using bearer token for auth
45 verbose request id dd2cd0f0c6ffde1e
46 http request PUT https://registry.npmjs.org/serverless-alexa-ability
47 http 403 https://registry.npmjs.org/serverless-alexa-ability
48 verbose headers { 'content-type': 'application/json',
48 verbose headers   'cache-control': 'max-age=300',
48 verbose headers   'content-length': '95',
48 verbose headers   'accept-ranges': 'bytes',
48 verbose headers   date: 'Sun, 14 May 2017 22:44:23 GMT',
48 verbose headers   via: '1.1 varnish',
48 verbose headers   connection: 'keep-alive',
48 verbose headers   'x-served-by': 'cache-lhr6329-LHR',
48 verbose headers   'x-cache': 'MISS',
48 verbose headers   'x-cache-hits': '0',
48 verbose headers   'x-timer': 'S1494801863.660745,VS0,VE1308',
48 verbose headers   vary: 'Accept-Encoding' }
49 verbose request invalidating /Users/pro/.npm/registry.npmjs.org/serverless-alexa-ability on PUT
50 error publish Failed PUT 403
51 verbose stack Error: "You cannot publish over the previously published version 0.1.3." : serverless-alexa-ability
51 verbose stack     at makeError (/Users/pro/.npm-packages/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
51 verbose stack     at CachingRegistryClient.<anonymous> (/Users/pro/.npm-packages/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
51 verbose stack     at Request._callback (/Users/pro/.npm-packages/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
51 verbose stack     at Request.self.callback (/Users/pro/.npm-packages/lib/node_modules/npm/node_modules/request/request.js:186:22)
51 verbose stack     at emitTwo (events.js:106:13)
51 verbose stack     at Request.emit (events.js:191:7)
51 verbose stack     at Request.<anonymous> (/Users/pro/.npm-packages/lib/node_modules/npm/node_modules/request/request.js:1081:10)
51 verbose stack     at emitOne (events.js:96:13)
51 verbose stack     at Request.emit (events.js:188:7)
51 verbose stack     at IncomingMessage.<anonymous> (/Users/pro/.npm-packages/lib/node_modules/npm/node_modules/request/request.js:1001:12)
52 verbose statusCode 403
53 verbose pkgid serverless-alexa-ability
54 verbose cwd /Users/pro/Documents/projects/awesome/serverless-alexa-ability
55 error Darwin 16.4.0
56 error argv "/usr/local/Cellar/node/7.1.0/bin/node" "/Users/pro/.npm-packages/bin/npm" "publish" "./"
57 error node v7.1.0
58 error npm  v4.0.5
59 error code E403
60 error "You cannot publish over the previously published version 0.1.3." : serverless-alexa-ability
61 error If you need help, you may report this error at:
61 error     <https://github.com/npm/npm/issues>
62 verbose exit [ 1, true ]
